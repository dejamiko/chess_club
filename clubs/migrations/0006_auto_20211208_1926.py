# Generated by Django 3.2.5 on 2021-12-08 19:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('clubs', '0005_remove_clubapplicationmodel_is_approved'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='elo_rating',
            field=models.IntegerField(default=1000),
        ),
        migrations.AlterField(
            model_name='club',
            name='applicants',
            field=models.ManyToManyField(related_name='applicant_of', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='club',
            name='members',
            field=models.ManyToManyField(related_name='member_of', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='club',
            name='officers',
            field=models.ManyToManyField(related_name='officer_of', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='club',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_of', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('deadline', models.DateTimeField()),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_tournaments', to='clubs.club')),
                ('coorganisers', models.ManyToManyField(related_name='coorganises', to=settings.AUTH_USER_MODEL)),
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organises', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='participates_in', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_wins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pairing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.IntegerField()),
                ('black_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plays_black_in', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairings_within', to='clubs.tournament')),
                ('white_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plays_white_in', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_draw', models.BooleanField(blank=True)),
                ('loser', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_losses', to=settings.AUTH_USER_MODEL)),
                ('pairing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match', to='clubs.pairing')),
                ('winner', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_wins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_number', models.IntegerField(unique=True)),
                ('pairings', models.ManyToManyField(related_name='group_in_which_the_paring_takes_place', to='clubs.Pairing')),
                ('participants', models.ManyToManyField(related_name='participant_in_group', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups_within', to='clubs.tournament')),
            ],
        ),
    ]
